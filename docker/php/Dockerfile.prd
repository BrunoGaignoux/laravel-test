FROM php:8.0.8-fpm-alpine

WORKDIR /app
COPY . .
RUN docker-php-ext-install mysqli pdo pdo_mysql
RUN docker-php-ext-enable mysqli pdo pdo_mysql
#RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
#RUN php -r "if (hash_file('sha384', 'composer-setup.php') === '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
#RUN php composer-setup.php
#RUN php -r "unlink('composer-setup.php');"
RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
RUN php -r "if (hash_file('sha384', 'composer-setup.php') === '906a84df04cea2aa72f40b5f787e49f22d4c2f19492ac310e8cba5b96ac8b64115ac402c8cd292b8a03482574915d1a8') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
RUN php composer-setup.php
RUN php -r "unlink('composer-setup.php');"
RUN mv composer.phar /usr/local/bin/composer
RUN wget -q -O /usr/local/bin/wait-for https://raw.githubusercontent.com/eficode/wait-for/v2.1.3/wait-for
RUN chmod +x /usr/local/bin/wait-for
COPY composer.json composer.lock .
RUN composer install --no-scripts --no-autoloader --ignore-platform-reqs
COPY ./docker/php/entrypoint.sh /
RUN composer dump-autoload --optimize
RUN chmod -R 777 storage
RUN chown -R $USER:www-data storage

CMD ["docker-php-entrypoint", "php-fpm"]

